// <auto-generated />
using System;
using IngSoftProyecto.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IngSoftProyecto.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("IngSoftProyecto.Models.Actividad", b =>
                {
                    b.Property<int>("ActividadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ActividadId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ActividadId");

                    b.ToTable("Actividad", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Asistencia", b =>
                {
                    b.Property<int>("AsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AsistenciaId"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MembresiaXMiembroId")
                        .HasColumnType("int");

                    b.Property<int>("MiembroXClaseId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeAsistenciaId")
                        .HasColumnType("int");

                    b.HasKey("AsistenciaId");

                    b.HasIndex("MembresiaXMiembroId");

                    b.HasIndex("MiembroXClaseId");

                    b.HasIndex("TipoDeAsistenciaId");

                    b.ToTable("Asistencia", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Clase", b =>
                {
                    b.Property<int>("ClaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClaseId"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("Cupo")
                        .HasColumnType("int");

                    b.Property<int>("EntrenadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time(6)");

                    b.HasKey("ClaseId");

                    b.HasIndex("ActividadId");

                    b.HasIndex("EntrenadorId");

                    b.ToTable("Clase", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Entrenador", b =>
                {
                    b.Property<int>("EntrenadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EntrenadorId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Certificacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("EntrenadorId");

                    b.ToTable("Entrenador", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.EstadoMembresia", b =>
                {
                    b.Property<int>("EstadoMembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EstadoMembresiaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EstadoMembresiaId");

                    b.ToTable("EstadoMembresia", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Membresia", b =>
                {
                    b.Property<int>("MembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MembresiaId"));

                    b.Property<decimal>("CostoBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DuracionEnDias")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoDeMembresiaId")
                        .HasColumnType("int");

                    b.HasKey("MembresiaId");

                    b.HasIndex("TipoDeMembresiaId");

                    b.ToTable("Membresia", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.MembresiaXMiembro", b =>
                {
                    b.Property<int>("MembresiaXMiembroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MembresiaXMiembroId"));

                    b.Property<int>("EstadoMembresiaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MembresiaId")
                        .HasColumnType("int");

                    b.Property<int>("MiembroId")
                        .HasColumnType("int");

                    b.Property<int>("PagoId")
                        .HasColumnType("int");

                    b.HasKey("MembresiaXMiembroId");

                    b.HasIndex("EstadoMembresiaId");

                    b.HasIndex("MembresiaId");

                    b.HasIndex("MiembroId");

                    b.HasIndex("PagoId");

                    b.ToTable("MembresiaXMiembro", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Miembro", b =>
                {
                    b.Property<int>("MiembroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MiembroId"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EntrenadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("TipoDeMiembroId")
                        .HasColumnType("int");

                    b.HasKey("MiembroId");

                    b.HasIndex("EntrenadorId");

                    b.HasIndex("TipoDeMiembroId");

                    b.ToTable("Miembro", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.MiembroXClase", b =>
                {
                    b.Property<int>("MiembroXClaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MiembroXClaseId"));

                    b.Property<int>("ClaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MiembroId")
                        .HasColumnType("int");

                    b.HasKey("MiembroXClaseId");

                    b.HasIndex("ClaseId");

                    b.HasIndex("MiembroId");

                    b.ToTable("MiembroXClase", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Pago", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<string>("DescuentoAplicado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PagoId");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.TipoDeAsistencia", b =>
                {
                    b.Property<int>("TipoDeAsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TipoDeAsistenciaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoDeAsistenciaId");

                    b.ToTable("TipoDeAsistencia", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.TipoDeMembresia", b =>
                {
                    b.Property<int>("TipoDeMembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TipoDeMembresiaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoDeMembresiaId");

                    b.ToTable("TipoDeMembresia", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.TipoDeMiembro", b =>
                {
                    b.Property<int>("TipoDeMiembroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TipoDeMiembroId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PorcentajeDescuento")
                        .HasColumnType("int");

                    b.HasKey("TipoDeMiembroId");

                    b.ToTable("TipoDeMiembro", (string)null);
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Asistencia", b =>
                {
                    b.HasOne("IngSoftProyecto.Models.MembresiaXMiembro", "MembresiaXMiembro")
                        .WithMany("Asistencias")
                        .HasForeignKey("MembresiaXMiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IngSoftProyecto.Models.MiembroXClase", "MiembroXClase")
                        .WithMany("Asistencias")
                        .HasForeignKey("MiembroXClaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IngSoftProyecto.Models.TipoDeAsistencia", "TipoDeAsistencia")
                        .WithMany("Asistencias")
                        .HasForeignKey("TipoDeAsistenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembresiaXMiembro");

                    b.Navigation("MiembroXClase");

                    b.Navigation("TipoDeAsistencia");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Clase", b =>
                {
                    b.HasOne("IngSoftProyecto.Models.Actividad", "Actividad")
                        .WithMany("Clases")
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IngSoftProyecto.Models.Entrenador", "Entrenador")
                        .WithMany("Clases")
                        .HasForeignKey("EntrenadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Entrenador");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Membresia", b =>
                {
                    b.HasOne("IngSoftProyecto.Models.TipoDeMembresia", "TipoDeMembresia")
                        .WithMany("Membresias")
                        .HasForeignKey("TipoDeMembresiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDeMembresia");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.MembresiaXMiembro", b =>
                {
                    b.HasOne("IngSoftProyecto.Models.EstadoMembresia", "EstadoMembresia")
                        .WithMany("MembresiasXMiembro")
                        .HasForeignKey("EstadoMembresiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IngSoftProyecto.Models.Membresia", "Membresia")
                        .WithMany("MembresiasXMiembro")
                        .HasForeignKey("MembresiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IngSoftProyecto.Models.Miembro", "Miembro")
                        .WithMany("MembresiasXMiembros")
                        .HasForeignKey("MiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IngSoftProyecto.Models.Pago", "Pago")
                        .WithMany("MembresiasXMiembro")
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoMembresia");

                    b.Navigation("Membresia");

                    b.Navigation("Miembro");

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Miembro", b =>
                {
                    b.HasOne("IngSoftProyecto.Models.Entrenador", "Entrenador")
                        .WithMany("Miembros")
                        .HasForeignKey("EntrenadorId");

                    b.HasOne("IngSoftProyecto.Models.TipoDeMiembro", "TipoDeMiembro")
                        .WithMany("Miembros")
                        .HasForeignKey("TipoDeMiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrenador");

                    b.Navigation("TipoDeMiembro");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.MiembroXClase", b =>
                {
                    b.HasOne("IngSoftProyecto.Models.Clase", "Clase")
                        .WithMany("MiembrosXClases")
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IngSoftProyecto.Models.Miembro", "Miembro")
                        .WithMany("MiembrosXClases")
                        .HasForeignKey("MiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("Miembro");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Actividad", b =>
                {
                    b.Navigation("Clases");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Clase", b =>
                {
                    b.Navigation("MiembrosXClases");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Entrenador", b =>
                {
                    b.Navigation("Clases");

                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.EstadoMembresia", b =>
                {
                    b.Navigation("MembresiasXMiembro");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Membresia", b =>
                {
                    b.Navigation("MembresiasXMiembro");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.MembresiaXMiembro", b =>
                {
                    b.Navigation("Asistencias");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Miembro", b =>
                {
                    b.Navigation("MembresiasXMiembros");

                    b.Navigation("MiembrosXClases");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.MiembroXClase", b =>
                {
                    b.Navigation("Asistencias");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.Pago", b =>
                {
                    b.Navigation("MembresiasXMiembro");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.TipoDeAsistencia", b =>
                {
                    b.Navigation("Asistencias");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.TipoDeMembresia", b =>
                {
                    b.Navigation("Membresias");
                });

            modelBuilder.Entity("IngSoftProyecto.Models.TipoDeMiembro", b =>
                {
                    b.Navigation("Miembros");
                });
#pragma warning restore 612, 618
        }
    }
}
